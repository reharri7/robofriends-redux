{"version":3,"sources":["components/Card.js","components/CardList.js","components/ErrorBoundry.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","ErrorBoundry","props","state","hasError","this","setState","children","React","Component","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","App","onSearchChange","event","target","value","fetch","then","res","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0QAceA,G,KAXF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA4BF,EAA5B,iBAAiDG,IAAI,YAC7D,gCACI,6BAAML,IACN,4BAAKC,YCYNK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEAR,GAAKK,EAAOG,GAAGR,GACfF,KAAOO,EAAOG,GAAGV,KACjBC,MAAQM,EAAOG,GAAGT,OAHZS,SCWXC,E,kDAlBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHC,E,gEAQfC,KAAKC,SAAS,CAAEF,UAAU,M,+BAI1B,OAAGC,KAAKF,MAAMC,SACJ,wDAEHC,KAAKH,MAAMK,a,GAhBCC,IAAMC,WCalBC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKnB,UAAU,MAAf,SACI,uBACAoB,KAAK,SACLC,YAAY,gBACZrB,UAAU,mCACVsB,SAAWH,OCERI,G,MARA,SAACd,GACZ,OACI,qBAAKe,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACMlB,EAAMK,aC2CLc,G,wDArCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKjB,SAAS,CAAEK,YAAaY,EAAMC,OAAOC,SAb1C,EAAKtB,MAAQ,CACTN,OAAQ,GACRc,YAAa,IAJP,E,gEAQO,IAAD,OAChBe,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKxB,SAAS,CAAET,OAAQiC,S,+BAMjC,IAAD,EAC2BzB,KAAKF,MAA7BN,EADH,EACGA,OAAQc,EADX,EACWA,YACVoB,EAAiB1B,KAAKF,MAAMN,OAAOmC,QAAQ,SAAAnC,GAC7C,OAAOA,EAAOP,KAAK2C,cAAcC,SAASvB,EAAYsB,kBAE1D,OAAQpC,EAAOsC,OAGX,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWmB,aAAeP,KAAKiB,iBAC/B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAASkC,WAPnC,oBAAItC,UAAU,KAAd,yB,GAxBUe,IAAMC,YCCT2B,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCMdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMhDX,M","file":"static/js/main.16d55633.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst Card = ({ name, email, id}) => {\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={ `https://robohash.org/${ id }?size=200x200` } alt=\"Profile\"/>\r\n            <div>\r\n                <h2>{ name }</h2>\r\n                <p>{ email }</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n            robots.map((user, i) => {\r\n                return( \r\n                    <Card \r\n                    key={ i } \r\n                    id={ robots[i].id } \r\n                    name={ robots[i].name } \r\n                    email={ robots[i].email }\r\n                    />\r\n                );\r\n            })\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(){\r\n        this.setState({ hasError: true })\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.hasError){\r\n            return<h1>Oops that is not good.</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\nexport default ErrorBoundry;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input \r\n            type='search' \r\n            placeholder='Search Robots'\r\n            className='pa3 ba b--green bg-lightest-blue' \r\n            onChange={ searchChange }\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n            { props.children }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll","import React from 'react';\r\n\r\n//imported Components\r\nimport CardList from '../components/CardList';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n\r\n//Styles\r\nimport './app.css';\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(res => res.json())\r\n        .then(users => this.setState({ robots: users }));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = this.state.robots.filter( robots => {\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n        return !robots.length ?\r\n        <h1 className='tc'>Loading</h1>\r\n        :(\r\n            <div className='tc'>\r\n                <h1 className='f1'>Robofriends</h1>\r\n                <SearchBox searchChange={ this.onSearchChange }/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={ filteredRobots }/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//imported packages\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Components\nimport App from './containers/App';\n\n//tools\nimport 'tachyons';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}